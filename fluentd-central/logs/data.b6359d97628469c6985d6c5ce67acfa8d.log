{"message":"parameter ';' in <ROOT>\n  ; docker exec -it fluentd-central sh\n  <source>\n    @type forward\n    port 24224\n    bind \"0.0.0.0\"\n  </source>\n  <source>\n    @type tcp\n    port 5170\n    bind \"0.0.0.0\"\n    format json\n    tag \"service.logs\"\n    <parse>\n      @type json\n    </parse>\n  </source>\n  <match **>\n    @type file\n    path \"/fluentd/logs/data.*.log\"\n    format json\n    time_slice_format %Y%m%d\n    compress gzip\n    append true\n    <format>\n      @type json\n    </format>\n    <buffer time>\n      timekey 86400\n      path /fluentd/logs/data.*.log\n    </buffer>\n  </match>\n</ROOT> is not used."}
{"pid":16,"ppid":7,"worker":0,"message":"starting fluentd worker pid=16 ppid=7 worker=0"}
{"bind":"0.0.0.0","port":5170,"message":"listening tcp socket bind=\"0.0.0.0\" port=5170"}
{"port":24224,"bind":"0.0.0.0","message":"listening port port=24224 bind=\"0.0.0.0\""}
{"worker":0,"message":"fluentd worker is now running worker=0"}
{"@timestamp":"2025-05-21T13:13:51.189192+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:13:54.995775+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:13:57.035198+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:13:51.79626+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.450962+09:00","@version":"1","message":"Restarting due to 22 class path changes (0 additions, 3 deletions, 19 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.460741+09:00","@version":"1","message":"Unregistering application ORDER-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.46112+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800859461, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.462151+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:3c11ed1e5485a25720006ef515549a3d: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.471997+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-3, groupId=order-service-group] Revoke previously assigned partitions shipping.completed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.471995+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-1, groupId=order-service-group] Revoke previously assigned partitions shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.472134+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-2, groupId=order-service-group] Revoke previously assigned partitions payment.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.473295+09:00","@version":"1","message":"order-service-group: partitions revoked: [shipping.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.473541+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-1, groupId=order-service-group] Member consumer-order-service-group-1-eb15b21c-9fd0-474b-a44f-bddd3aab1137 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.473823+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-1, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.473921+09:00","@version":"1","message":"order-service-group: partitions revoked: [payment.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474064+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-1, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.47415+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-1, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474412+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-2, groupId=order-service-group] Member consumer-order-service-group-2-5840049e-37da-4c53-ab6b-2bb091f1f68e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474524+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-2, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474543+09:00","@version":"1","message":"order-service-group: partitions revoked: [shipping.completed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474559+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-2, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474585+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-2, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474613+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-3, groupId=order-service-group] Member consumer-order-service-group-3-813c72cd-12c7-4cc8-8e69-d48b88f1c7db sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474669+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:3c11ed1e5485a25720006ef515549a3d - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474726+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-3, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474758+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-3, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474788+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-3, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474941+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-2, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474941+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-1, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.474977+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-3, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.47498+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-2, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.475014+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-3, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.475023+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-1, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.764967+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.765422+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.765955+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.771006+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-2 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.771709+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.780771+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.780934+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.781029+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.7829+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-3 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.783205+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.795234+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.795334+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.795383+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.796125+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-1 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.796326+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:19.797107+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:20.812833+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:20.821951+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-1","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:20.823734+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:20.825937+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:20.832813+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.78054+09:00","@version":"1","message":"Restarting due to 24 class path changes (0 additions, 24 deletions, 0 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.781751+09:00","@version":"1","message":"Unregistering application USER-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.781871+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800861781, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.782103+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:48ad82df40c2d9cc713d6d97119dfa8f: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.783963+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.78602+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:48ad82df40c2d9cc713d6d97119dfa8f - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.793257+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.797594+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-12","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:21.798166+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.801161+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.811902+09:00","@version":"1","message":"Calling shutdown() multiple times.","logger_name":"io.opentelemetry.sdk.trace.SdkTracerProvider","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.812241+09:00","@version":"1","message":"Calling shutdown() multiple times.","logger_name":"io.opentelemetry.exporter.zipkin.ZipkinSpanExporter","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:21.812708+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.544031+09:00","@version":"1","message":"Restarting due to 18 class path changes (0 additions, 0 deletions, 18 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.553776+09:00","@version":"1","message":"Unregistering application PAYMENT-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.553907+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800862553, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.554019+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:0e2539de1a27e073c151ce2087b817b7: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.556618+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-2, groupId=payment-service-group] Revoke previously assigned partitions shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.556618+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-1, groupId=payment-service-group] Revoke previously assigned partitions order.created-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.556955+09:00","@version":"1","message":"payment-service-group: partitions revoked: [order.created-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.556954+09:00","@version":"1","message":"payment-service-group: partitions revoked: [shipping.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.557191+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-2, groupId=payment-service-group] Member consumer-payment-service-group-2-91d726b7-160a-47ba-b4c4-7cc44ad6fb82 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.55719+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-1, groupId=payment-service-group] Member consumer-payment-service-group-1-b544a910-611e-4250-8949-72fa7d9cc13c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.5575+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-2, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.557504+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-1, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.55755+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-2, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.557592+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-2, groupId=payment-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.557685+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-1, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.557819+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-1, groupId=payment-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.558369+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:0e2539de1a27e073c151ce2087b817b7 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.558471+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-1, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.558515+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-2, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.55853+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-1, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.558569+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-2, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.84132+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.84138+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.841553+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.841772+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.841871+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.844874+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.845046+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.845119+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.854645+09:00","@version":"1","message":"App info kafka.consumer for consumer-payment-service-group-1 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.854989+09:00","@version":"1","message":"App info kafka.consumer for consumer-payment-service-group-2 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.855086+09:00","@version":"1","message":"payment-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.855236+09:00","@version":"1","message":"payment-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.856265+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.856634+09:00","@version":"1","message":"Pausing ProtocolHandler [\"http-nio-8084\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.858209+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.858491+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8084\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.863878+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.86774+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-1","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:22.868263+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.869141+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:22.873971+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.497054+09:00","@version":"1","message":"Restarting due to 15 class path changes (0 additions, 0 deletions, 15 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.503015+09:00","@version":"1","message":"Unregistering application SHIPPING-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.503273+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800863503, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.50378+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:98c305529c3c6969ff4fc24abc072470: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.512518+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-1, groupId=shipping-service-group] Revoke previously assigned partitions payment.completed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.512984+09:00","@version":"1","message":"shipping-service-group: partitions revoked: [payment.completed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.513351+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-1, groupId=shipping-service-group] Member consumer-shipping-service-group-1-b8a81d7c-a274-4e49-8393-59398265a6fa sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.513949+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-1, groupId=shipping-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.514026+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-1, groupId=shipping-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.514093+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-1, groupId=shipping-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.516664+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-1, groupId=shipping-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.51674+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-1, groupId=shipping-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.516847+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:98c305529c3c6969ff4fc24abc072470 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.835884+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.837895+09:00","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-0","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:23.851944+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:3c11ed1e5485a25720006ef515549a3d - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.857613+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.871406+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.871511+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.871579+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.871631+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.874674+09:00","@version":"1","message":"App info kafka.consumer for consumer-shipping-service-group-1 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.875033+09:00","@version":"1","message":"shipping-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.876098+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.876633+09:00","@version":"1","message":"Pausing ProtocolHandler [\"http-nio-8083\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.878105+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.878344+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8083\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.884069+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.887732+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-1","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:23.888244+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.889047+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.895183+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.938599+09:00","@version":"1","message":"Starting OrderServiceApplication using Java 17.0.6 with PID 75729 (/Users/edowon/Desktop/git/practice-msa-comms/order-service/target/classes started by edowon in /Users/edowon/Desktop/git/practice-msa-comms)","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:23.938855+09:00","@version":"1","message":"Running with Spring Boot v3.2.4, Spring v6.1.5","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T13:14:23.939171+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.088355+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.091506+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.135625+09:00","@version":"1","message":"BeanFactory id=909f3c03-60ed-3ee5-bb27-b67b41b2dd36","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.159284+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.160425+09:00","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.160999+09:00","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.162191+09:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.1627+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.162887+09:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$783/0x0000000801121398] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.163555+09:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.165161+09:00","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.166425+09:00","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.166807+09:00","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.166945+09:00","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.167089+09:00","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.168138+09:00","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.170605+09:00","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.171203+09:00","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.171477+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.172441+09:00","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.173167+09:00","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.174035+09:00","@version":"1","message":"Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.174742+09:00","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.216873+09:00","@version":"1","message":"Tomcat initialized with port 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.217226+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.217311+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.21735+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.19]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.22551+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.225577+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 285 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.286489+09:00","@version":"1","message":"HikariPool-2 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.287598+09:00","@version":"1","message":"HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.287667+09:00","@version":"1","message":"HikariPool-2 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.287724+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.391076+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.394786+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.402803+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.460215+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.46242+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.565571+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.817442+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.822132+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:48ad82df40c2d9cc713d6d97119dfa8f - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.824524+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.825655+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.827542+09:00","@version":"1","message":"Destroying Spring FrameworkServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.912597+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.926558+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.936244+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:24.939366+09:00","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.971083+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.972974+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.973108+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.971128+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.userservice.UserServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.976942+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.977028+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.977043+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.977055+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.977068+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.97708+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.977091+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.989788+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.990457+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.990768+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.991522+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1747800864991 with initial instances count: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.995563+09:00","@version":"1","message":"Registering application ORDER-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.99582+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800864995, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.99595+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:fea8d1c26d5d1f49209203446b37e9ca: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.996226+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.999513+09:00","@version":"1","message":"Tomcat started on port 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:24.999929+09:00","@version":"1","message":"Updating port to 8082","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.004797+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:fea8d1c26d5d1f49209203446b37e9ca - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.008051+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-order-service-group-4\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = order-service-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.009281+09:00","@version":"1","message":"Kafka version: 3.6.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.009322+09:00","@version":"1","message":"Kafka commitId: 5e3c2b738d253ff5","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.009333+09:00","@version":"1","message":"Kafka startTimeMs: 1747800865009","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.010042+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Subscribed to topic(s): shipping.failed","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.011041+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-order-service-group-5\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = order-service-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.012157+09:00","@version":"1","message":"Kafka version: 3.6.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.012186+09:00","@version":"1","message":"Kafka commitId: 5e3c2b738d253ff5","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.012194+09:00","@version":"1","message":"Kafka startTimeMs: 1747800865012","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.013965+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Subscribed to topic(s): payment.failed","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.014925+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.01545+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.015751+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.016114+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-order-service-group-6\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = order-service-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.017141+09:00","@version":"1","message":"Kafka version: 3.6.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.017171+09:00","@version":"1","message":"Kafka commitId: 5e3c2b738d253ff5","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.017182+09:00","@version":"1","message":"Kafka startTimeMs: 1747800865017","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.018917+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.018986+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Subscribed to topic(s): shipping.completed","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.019021+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.019305+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.020135+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Request joining group due to: need to re-join with the given member-id: consumer-order-service-group-4-187ae7fb-7632-43e7-bf21-149575931d52","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.02021+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.020222+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.022562+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Request joining group due to: need to re-join with the given member-id: consumer-order-service-group-5-db532587-a671-4432-8bee-1dcff8b34d1b","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.022625+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.022637+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.024103+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.02423+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.02452+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.027616+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Request joining group due to: need to re-join with the given member-id: consumer-order-service-group-6-0a30dbbe-aa53-4d6b-8de3-f07c956446b8","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.027679+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.027695+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.0283+09:00","@version":"1","message":"Started OrderServiceApplication in 1.112 seconds (process running for 336.899)","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.030096+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.216639+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.222577+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.296386+09:00","@version":"1","message":"BeanFactory id=8d9d4099-0337-3700-b9ec-9aa781da5c81","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.340494+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:25.34253+09:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:25.433295+09:00","@version":"1","message":"Tomcat initialized with port 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.433757+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.43388+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.433932+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.24]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.445309+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.445431+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 473 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.618936+09:00","@version":"1","message":"HikariPool-2 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.619993+09:00","@version":"1","message":"HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.620105+09:00","@version":"1","message":"HikariPool-2 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.620194+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.709635+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.713005+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.72021+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.744985+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.74748+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.879231+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.879329+09:00","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-%d","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:25.881937+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:0e2539de1a27e073c151ce2087b817b7 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.882063+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.96438+09:00","@version":"1","message":"Starting PaymentServiceApplication using Java 17.0.6 with PID 75752 (/Users/edowon/Desktop/git/practice-msa-comms/payment-service/target/classes started by edowon in /Users/edowon/Desktop/git/practice-msa-comms)","logger_name":"com.example.paymentservice.PaymentServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:25.964581+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.paymentservice.PaymentServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.140135+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.144032+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.145333+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:26.177607+09:00","@version":"1","message":"Global AuthenticationManager configured with UserDetailsService bean with name userServiceImpl","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.192188+09:00","@version":"1","message":"BeanFactory id=9057c79a-d5eb-3b13-ae83-a01b2f89ea4e","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.264254+09:00","@version":"1","message":"Tomcat initialized with port 8084 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.264626+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8084\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.264727+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.264776+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.274121+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.274224+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 309 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.322931+09:00","@version":"1","message":"Restarting due to 22 class path changes (3 additions, 0 deletions, 19 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.324834+09:00","@version":"1","message":"Unregistering application ORDER-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.324914+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800866324, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.325018+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:fea8d1c26d5d1f49209203446b37e9ca: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326077+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Member consumer-order-service-group-4-187ae7fb-7632-43e7-bf21-149575931d52 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.32619+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326202+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326211+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326288+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Member consumer-order-service-group-6-0a30dbbe-aa53-4d6b-8de3-f07c956446b8 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326293+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Member consumer-order-service-group-5-db532587-a671-4432-8bee-1dcff8b34d1b sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326434+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.32645+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-4, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326497+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326513+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326522+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326549+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326563+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.326576+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.327367+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.327395+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-6, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.327422+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.327431+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-5, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.328288+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:fea8d1c26d5d1f49209203446b37e9ca - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.410805+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.414729+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.421838+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.422556+09:00","@version":"1","message":"HikariPool-2 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.423641+09:00","@version":"1","message":"HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.423751+09:00","@version":"1","message":"HikariPool-2 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.424157+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.482258+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.48436+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.522506+09:00","@version":"1","message":"Exposing 27 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.57971+09:00","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@27685e78, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6912e950, org.springframework.security.web.context.SecurityContextHolderFilter@8ef66d7, org.springframework.security.web.header.HeaderWriterFilter@1e7c9ea2, org.springframework.web.filter.CorsFilter@1fc13e9, org.springframework.security.web.authentication.logout.LogoutFilter@22796841, com.example.userservice.security.IpAddressLoggingFilter@6f00f44b, com.example.userservice.security.AuthenticationFilterNew@a7efc4d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d6ffaa7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77f54379, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7458dc3b, org.springframework.security.web.session.SessionManagementFilter@37e7c6ef, org.springframework.security.web.access.ExceptionTranslationFilter@17c9ca58, org.springframework.security.web.access.intercept.AuthorizationFilter@2757f415]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.591371+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:26.891529+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.900058+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.905612+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:98c305529c3c6969ff4fc24abc072470 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.905772+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.923981+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:26.946627+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:26.990663+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:26.995203+09:00","@version":"1","message":"Exposing 3 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.005129+09:00","@version":"1","message":"Starting ShippingServiceApplication using Java 17.0.6 with PID 75767 (/Users/edowon/Desktop/git/practice-msa-comms/shipping-service/target/classes started by edowon in /Users/edowon/Desktop/git/practice-msa-comms)","logger_name":"com.example.shippingservice.ShippingServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.005332+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.shippingservice.ShippingServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.031869+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033369+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033433+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033535+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033559+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033578+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033595+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033613+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033631+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.033645+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.05376+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.054155+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.054481+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.054677+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1747800867054 with initial instances count: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.057648+09:00","@version":"1","message":"Registering application PAYMENT-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.057738+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800867057, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.057929+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.058362+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8084\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.060912+09:00","@version":"1","message":"Tomcat started on port 8084 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.061877+09:00","@version":"1","message":"Updating port to 8084","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.064237+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-payment-service-group-3\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\tenable.metrics.push = true\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = payment-service-group\n\tgroup.instance.id = null\n\tgroup.protocol = classic\n\tgroup.remote.assignor = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetadata.recovery.strategy = none\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.max.ms = 1000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.06476+09:00","@version":"1","message":"initializing Kafka metrics collector","logger_name":"org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.066248+09:00","@version":"1","message":"Kafka version: 3.8.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.066301+09:00","@version":"1","message":"Kafka commitId: 70d6ff42debf7e17","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.066327+09:00","@version":"1","message":"Kafka startTimeMs: 1747800867066","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.067356+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.067616+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Subscribed to topic(s): order.created","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.068529+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-payment-service-group-4\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\tenable.metrics.push = true\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = payment-service-group\n\tgroup.instance.id = null\n\tgroup.protocol = classic\n\tgroup.remote.assignor = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetadata.recovery.strategy = none\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.max.ms = 1000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.068913+09:00","@version":"1","message":"initializing Kafka metrics collector","logger_name":"org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.070213+09:00","@version":"1","message":"Kafka version: 3.8.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.070254+09:00","@version":"1","message":"Kafka commitId: 70d6ff42debf7e17","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.070268+09:00","@version":"1","message":"Kafka startTimeMs: 1747800867070","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.071514+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Subscribed to topic(s): shipping.failed","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.073478+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.07399+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.074582+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.076621+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.076875+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.077159+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.077167+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-group-3-fb7184ce-659e-458b-b13b-32e4acb68117","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.077211+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.079725+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-group-4-a9d3075b-5c64-4e1c-bdbd-2215cafdba06","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.079789+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.081967+09:00","@version":"1","message":"Started PaymentServiceApplication in 1.141 seconds (process running for 336.045)","logger_name":"com.example.paymentservice.PaymentServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.083697+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.114844+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.143046+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.19409+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:27.198358+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.202748+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.228313+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.23179+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.231948+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.236736+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.236854+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.23689+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.236926+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.236952+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.236973+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.236999+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.255186+09:00","@version":"1","message":"BeanFactory id=7ae47e19-6b0d-313e-a5fe-2d894bf69b11","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.263175+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.263914+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.264341+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.265095+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1747800867265 with initial instances count: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.273594+09:00","@version":"1","message":"Registering application USER-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.273995+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800867273, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.274365+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:080d6f0a614a1c2fd01d0dd25954a9e3: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.274548+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.275225+09:00","@version":"1","message":"Tomcat started on port 8081 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.275587+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.282551+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:080d6f0a614a1c2fd01d0dd25954a9e3 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.290041+09:00","@version":"1","message":"Started UserServiceApplication in 2.39 seconds (process running for 341.474)","logger_name":"com.example.userservice.UserServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.292491+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.335229+09:00","@version":"1","message":"Tomcat initialized with port 8083 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.335854+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8083\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.335954+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.336002+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.347281+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.347394+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 341 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.486421+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.488863+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.495339+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.496142+09:00","@version":"1","message":"HikariPool-2 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.497277+09:00","@version":"1","message":"HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.497439+09:00","@version":"1","message":"HikariPool-2 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.497855+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.521335+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.522834+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.601645+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:27.873476+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.900204+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:27.922233+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.942223+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:27.945713+09:00","@version":"1","message":"Exposing 3 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.977713+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979053+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979103+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979211+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979239+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979257+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979273+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979291+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979307+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.979322+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.996174+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.996888+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.997055+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:27.997157+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1747800867997 with initial instances count: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.000073+09:00","@version":"1","message":"Registering application SHIPPING-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.000153+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800868000, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.000254+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.000517+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8083\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.001442+09:00","@version":"1","message":"Tomcat started on port 8083 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.001743+09:00","@version":"1","message":"Updating port to 8083","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.003819+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = latest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-shipping-service-group-2\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\tenable.metrics.push = true\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = shipping-service-group\n\tgroup.instance.id = null\n\tgroup.protocol = classic\n\tgroup.remote.assignor = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetadata.recovery.strategy = none\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.max.ms = 1000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.004392+09:00","@version":"1","message":"initializing Kafka metrics collector","logger_name":"org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.006288+09:00","@version":"1","message":"Kafka version: 3.8.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.006341+09:00","@version":"1","message":"Kafka commitId: 70d6ff42debf7e17","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.006364+09:00","@version":"1","message":"Kafka startTimeMs: 1747800868006","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.006687+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.007399+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Subscribed to topic(s): payment.completed","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.015523+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.01566+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.015974+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.016736+09:00","@version":"1","message":"Started ShippingServiceApplication in 1.038 seconds (process running for 334.599)","logger_name":"com.example.shippingservice.ShippingServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.018558+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Request joining group due to: need to re-join with the given member-id: consumer-shipping-service-group-2-4cbe7f87-a2cf-4e77-beb7-6badd9b8713a","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.018599+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.018638+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.524847+09:00","@version":"1","message":"Restarting due to 24 class path changes (24 additions, 0 deletions, 0 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.525975+09:00","@version":"1","message":"Unregistering application USER-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.526135+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800868526, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.527279+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:080d6f0a614a1c2fd01d0dd25954a9e3: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.528409+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.540437+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:080d6f0a614a1c2fd01d0dd25954a9e3 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.543052+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.543562+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-14","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:28.544083+09:00","@version":"1","message":"HikariPool-2 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.544889+09:00","@version":"1","message":"HikariPool-2 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.549342+09:00","@version":"1","message":"Calling shutdown() multiple times.","logger_name":"io.opentelemetry.sdk.trace.SdkTracerProvider","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.549463+09:00","@version":"1","message":"Calling shutdown() multiple times.","logger_name":"io.opentelemetry.exporter.zipkin.ZipkinSpanExporter","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:28.549669+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.028109+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-shipping-service-group-2-4cbe7f87-a2cf-4e77-beb7-6badd9b8713a', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.028739+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Finished assignment for group at generation 5: {consumer-shipping-service-group-2-4cbe7f87-a2cf-4e77-beb7-6badd9b8713a=Assignment(partitions=[payment.completed-0])}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.030277+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.03036+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.030421+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.032278+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-5 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.032495+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.032632+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.032846+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.032901+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.03657+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.03663+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.037317+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-6 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.037567+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.037809+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.037136+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-shipping-service-group-2-4cbe7f87-a2cf-4e77-beb7-6badd9b8713a', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.037401+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Notifying assignor about the new Assignment(partitions=[payment.completed-0])","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.037503+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Adding newly assigned partitions: payment.completed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.041655+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-4 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.041866+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.042811+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.042981+09:00","@version":"1","message":"Setting offset for partition payment.completed-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerUtils","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.043235+09:00","@version":"1","message":"shipping-service-group: partitions assigned: [payment.completed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.555682+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.56209+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:080d6f0a614a1c2fd01d0dd25954a9e3 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.566498+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.567307+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-14","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.688131+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.userservice.UserServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.921347+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.925909+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:31.99352+09:00","@version":"1","message":"BeanFactory id=8d9d4099-0337-3700-b9ec-9aa781da5c81","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.036136+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:32.03809+09:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:32.054912+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.055345+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-12","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:32.05563+09:00","@version":"1","message":"HikariPool-2 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.055901+09:00","@version":"1","message":"HikariPool-2 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.056499+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.127294+09:00","@version":"1","message":"Tomcat initialized with port 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.12763+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.127718+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.127761+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.24]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.136914+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.136994+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 447 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.307819+09:00","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.308942+09:00","@version":"1","message":"HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.309083+09:00","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.309158+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.40357+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.40677+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.412442+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.4341+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.436309+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:32.805966+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:32.837293+09:00","@version":"1","message":"Global AuthenticationManager configured with UserDetailsService bean with name userServiceImpl","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.094772+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-payment-service-group-3-fb7184ce-659e-458b-b13b-32e4acb68117', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.094768+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-payment-service-group-4-a9d3075b-5c64-4e1c-bdbd-2215cafdba06', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.098792+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Finished assignment for group at generation 5: {consumer-payment-service-group-4-a9d3075b-5c64-4e1c-bdbd-2215cafdba06=Assignment(partitions=[shipping.failed-0]), consumer-payment-service-group-3-fb7184ce-659e-458b-b13b-32e4acb68117=Assignment(partitions=[order.created-0])}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.107084+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-payment-service-group-4-a9d3075b-5c64-4e1c-bdbd-2215cafdba06', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.107086+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-payment-service-group-3-fb7184ce-659e-458b-b13b-32e4acb68117', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.107363+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Notifying assignor about the new Assignment(partitions=[shipping.failed-0])","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.107386+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Notifying assignor about the new Assignment(partitions=[order.created-0])","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.107423+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Adding newly assigned partitions: shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.107434+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Adding newly assigned partitions: order.created-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.108909+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Found no committed offset for partition shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.108909+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Found no committed offset for partition order.created-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.110201+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.","logger_name":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.110322+09:00","@version":"1","message":"payment-service-group: partitions assigned: [order.created-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.111397+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Resetting offset for partition shipping.failed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.","logger_name":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.111482+09:00","@version":"1","message":"payment-service-group: partitions assigned: [shipping.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.124257+09:00","@version":"1","message":"Exposing 27 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.170816+09:00","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@25c7e485, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60c90ae8, org.springframework.security.web.context.SecurityContextHolderFilter@33a50130, org.springframework.security.web.header.HeaderWriterFilter@2d62f8ea, org.springframework.web.filter.CorsFilter@7f9d6279, org.springframework.security.web.authentication.logout.LogoutFilter@592deadd, com.example.userservice.security.IpAddressLoggingFilter@18f80826, com.example.userservice.security.AuthenticationFilterNew@2813470, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@265b2c95, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54e0eaa8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a37e082, org.springframework.security.web.session.SessionManagementFilter@4de32064, org.springframework.security.web.access.ExceptionTranslationFilter@438ec298, org.springframework.security.web.access.intercept.AuthorizationFilter@4ec45293]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.597885+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.622853+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.667199+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:33.695947+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.698873+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.698998+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.699406+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.699434+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.69945+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.699464+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.699485+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.699501+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.699549+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.718941+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.719476+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.71968+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.719977+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1747800873719 with initial instances count: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.727177+09:00","@version":"1","message":"Registering application USER-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.72727+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800873727, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.727379+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.727781+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.72821+09:00","@version":"1","message":"Tomcat started on port 8081 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.728442+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.733649+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.745126+09:00","@version":"1","message":"Started UserServiceApplication in 2.122 seconds (process running for 347.93)","logger_name":"com.example.userservice.UserServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:33.746643+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.058717+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.06833+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:fea8d1c26d5d1f49209203446b37e9ca - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.06994+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-12","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.168587+09:00","@version":"1","message":"Starting OrderServiceApplication using Java 17.0.6 with PID 75729 (/Users/edowon/Desktop/git/practice-msa-comms/order-service/target/classes started by edowon in /Users/edowon/Desktop/git/practice-msa-comms)","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.168758+09:00","@version":"1","message":"Running with Spring Boot v3.2.4, Spring v6.1.5","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T13:14:35.168797+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.307406+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.310971+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.352508+09:00","@version":"1","message":"BeanFactory id=909f3c03-60ed-3ee5-bb27-b67b41b2dd36","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.375557+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.376602+09:00","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.377168+09:00","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.378396+09:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.378848+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.379029+09:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$783/0x0000000801121398] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.379674+09:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.381327+09:00","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.382763+09:00","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.38321+09:00","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.383338+09:00","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.383474+09:00","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.384567+09:00","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.387026+09:00","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.387743+09:00","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.388036+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.388667+09:00","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.389217+09:00","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.390057+09:00","@version":"1","message":"Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.390826+09:00","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.432718+09:00","@version":"1","message":"Tomcat initialized with port 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.43303+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.433118+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.433152+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.19]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.441707+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.441769+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 272 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.509723+09:00","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.510652+09:00","@version":"1","message":"HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.510697+09:00","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.510749+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.555294+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.557816+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.561748+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.586591+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.588945+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.667163+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.933971+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.945949+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.955536+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:14:35.958862+09:00","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.983617+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.984996+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985064+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985451+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985468+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985475+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985483+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985491+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985501+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.985509+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.994507+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.994936+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.995121+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.995433+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1747800875995 with initial instances count: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.998368+09:00","@version":"1","message":"Registering application ORDER-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.998433+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747800875998, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.998538+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.998932+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.999771+09:00","@version":"1","message":"Tomcat started on port 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:35.999998+09:00","@version":"1","message":"Updating port to 8082","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.003712+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.004195+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-order-service-group-7\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = order-service-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.005255+09:00","@version":"1","message":"Kafka version: 3.6.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.005281+09:00","@version":"1","message":"Kafka commitId: 5e3c2b738d253ff5","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.005289+09:00","@version":"1","message":"Kafka startTimeMs: 1747800876005","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.006029+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Subscribed to topic(s): shipping.failed","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.006659+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-order-service-group-8\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = order-service-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.00776+09:00","@version":"1","message":"Kafka version: 3.6.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.007796+09:00","@version":"1","message":"Kafka commitId: 5e3c2b738d253ff5","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.007806+09:00","@version":"1","message":"Kafka startTimeMs: 1747800876007","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.008542+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Subscribed to topic(s): payment.failed","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.009221+09:00","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-order-service-group-9\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = order-service-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.010308+09:00","@version":"1","message":"Kafka version: 3.6.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.010337+09:00","@version":"1","message":"Kafka commitId: 5e3c2b738d253ff5","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.010346+09:00","@version":"1","message":"Kafka startTimeMs: 1747800876010","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.010777+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.010874+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.011139+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Subscribed to topic(s): shipping.completed","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.011304+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.012675+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.012762+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.013102+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.01406+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.014142+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.01415+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Request joining group due to: need to re-join with the given member-id: consumer-order-service-group-7-6da6d043-3e65-441f-8f26-9a60c75fa2a7","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.014192+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.014203+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.014585+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.016009+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Request joining group due to: need to re-join with the given member-id: consumer-order-service-group-8-079692ca-18d6-468a-9301-6f8051b9b173","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.016075+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.016095+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.017632+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Request joining group due to: need to re-join with the given member-id: consumer-order-service-group-9-33be8042-5876-4018-b388-ab2116f7c467","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.017673+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.017684+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.019499+09:00","@version":"1","message":"Started OrderServiceApplication in 0.874 seconds (process running for 347.891)","logger_name":"com.example.orderservice.OrderServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:36.020725+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.023791+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-order-service-group-8-079692ca-18d6-468a-9301-6f8051b9b173', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.023852+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-order-service-group-7-6da6d043-3e65-441f-8f26-9a60c75fa2a7', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.024031+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-order-service-group-9-33be8042-5876-4018-b388-ab2116f7c467', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.034425+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Finished assignment for group at generation 7: {consumer-order-service-group-7-6da6d043-3e65-441f-8f26-9a60c75fa2a7=Assignment(partitions=[shipping.failed-0]), consumer-order-service-group-8-079692ca-18d6-468a-9301-6f8051b9b173=Assignment(partitions=[payment.failed-0]), consumer-order-service-group-9-33be8042-5876-4018-b388-ab2116f7c467=Assignment(partitions=[shipping.completed-0])}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.045325+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-order-service-group-7-6da6d043-3e65-441f-8f26-9a60c75fa2a7', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.045645+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Notifying assignor about the new Assignment(partitions=[shipping.failed-0])","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.045714+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Adding newly assigned partitions: shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.054798+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-order-service-group-9-33be8042-5876-4018-b388-ab2116f7c467', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.054804+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-order-service-group-8-079692ca-18d6-468a-9301-6f8051b9b173', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.055018+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Notifying assignor about the new Assignment(partitions=[shipping.completed-0])","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.055074+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Adding newly assigned partitions: shipping.completed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.055146+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Notifying assignor about the new Assignment(partitions=[payment.failed-0])","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.055259+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Adding newly assigned partitions: payment.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.059802+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Found no committed offset for partition payment.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.059802+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Found no committed offset for partition shipping.completed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.059818+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Found no committed offset for partition shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.061514+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Resetting offset for partition shipping.failed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.","logger_name":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.061618+09:00","@version":"1","message":"order-service-group: partitions assigned: [shipping.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.065042+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Resetting offset for partition payment.failed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.","logger_name":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.06506+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Resetting offset for partition shipping.completed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.","logger_name":"org.apache.kafka.clients.consumer.internals.SubscriptionState","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.065111+09:00","@version":"1","message":"order-service-group: partitions assigned: [payment.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:14:42.065197+09:00","@version":"1","message":"order-service-group: partitions assigned: [shipping.completed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:16.686031+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:16.686296+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:16.689014+09:00","@version":"1","message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:16.690507+09:00","@version":"1","message":"Access attempt to /users from IP: 0:0:0:0:0:0:0:1","logger_name":"com.example.userservice.security.IpAddressLoggingFilter","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"db8aa04d552639c09baeaed8bc853350","spanId":"552a6115457e3c2b"}
{"@timestamp":"2025-05-21T13:15:42.224862+09:00","@version":"1","message":"Access attempt to /users/730e62e4-a66b-467e-b478-74bf9ed565fc from IP: 127.0.0.1","logger_name":"com.example.userservice.security.IpAddressLoggingFilter","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2d7239390d90f9f3ea410a68b4b5a660","spanId":"d2d5efcb36feacb3"}
{"@timestamp":"2025-05-21T13:15:42.230485+09:00","@version":"1","message":"Called getUser method: 730e62e4-a66b-467e-b478-74bf9ed565fc","logger_name":"com.example.userservice.controller.UserController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2d7239390d90f9f3ea410a68b4b5a660","spanId":"6f91328a70da5f55"}
{"@timestamp":"2025-05-21T13:15:42.230615+09:00","@version":"1","message":"Retrieve an user's details 730e62e4-a66b-467e-b478-74bf9ed565fc","logger_name":"com.example.userservice.service.UserServiceImpl","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2d7239390d90f9f3ea410a68b4b5a660","spanId":"6f91328a70da5f55"}
{"@timestamp":"2025-05-21T13:15:42.234179+09:00","@version":"1","message":"Before call orders microservice: userId [730e62e4-a66b-467e-b478-74bf9ed565fc]","logger_name":"com.example.userservice.service.OrderService","thread_name":"bulkhead-orderService-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:42.23653+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:42.236752+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:42.238692+09:00","@version":"1","message":"Completed initialization in 2 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:15:42.241394+09:00","@version":"1","message":"Before retrieve orders data","logger_name":"com.example.orderservice.controller.OrderController","thread_name":"http-nio-8082-exec-1","level":"INFO","level_value":20000,"traceId":"3a15e9ce633fb2622c5f00e3a734245b","spanId":"7f2541579795ffd8"}
{"@timestamp":"2025-05-21T13:15:42.245322+09:00","@version":"1","message":"After retrieved orders data","logger_name":"com.example.orderservice.controller.OrderController","thread_name":"http-nio-8082-exec-1","level":"INFO","level_value":20000,"traceId":"3a15e9ce633fb2622c5f00e3a734245b","spanId":"7f2541579795ffd8"}
{"@timestamp":"2025-05-21T13:15:42.248776+09:00","@version":"1","message":"After called orders microservice using restful api","logger_name":"com.example.userservice.service.OrderService","thread_name":"bulkhead-orderService-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:19:27.035631+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:19:27.982852+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:19:33.705747+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:19:35.989932+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:23:27.247662+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Node -1 disconnected.","logger_name":"org.apache.kafka.clients.NetworkClient","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:23:27.247662+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Node -1 disconnected.","logger_name":"org.apache.kafka.clients.NetworkClient","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:23:28.232166+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Node -1 disconnected.","logger_name":"org.apache.kafka.clients.NetworkClient","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:23:36.036138+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Node -1 disconnected.","logger_name":"org.apache.kafka.clients.NetworkClient","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:23:36.219126+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Node -1 disconnected.","logger_name":"org.apache.kafka.clients.NetworkClient","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:23:36.219144+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Node -1 disconnected.","logger_name":"org.apache.kafka.clients.NetworkClient","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.254177+09:00","@version":"1","message":"Unregistering application PAYMENT-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.254367+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747801455254, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.254721+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255717+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Revoke previously assigned partitions order.created-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255737+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Revoke previously assigned partitions shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255783+09:00","@version":"1","message":"payment-service-group: partitions revoked: [order.created-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255784+09:00","@version":"1","message":"payment-service-group: partitions revoked: [shipping.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.25582+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Member consumer-payment-service-group-3-fb7184ce-659e-458b-b13b-32e4acb68117 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.25582+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Member consumer-payment-service-group-4-a9d3075b-5c64-4e1c-bdbd-2215cafdba06 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255916+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255917+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255931+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255935+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255945+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.255947+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.258873+09:00","@version":"1","message":"Unregistering application USER-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.259056+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747801455259, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.256471+09:00","@version":"1","message":"Unregistering application SHIPPING-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.256666+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747801455256, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.257269+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.259023+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Revoke previously assigned partitions payment.completed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.259114+09:00","@version":"1","message":"shipping-service-group: partitions revoked: [payment.completed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.259164+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Member consumer-shipping-service-group-2-4cbe7f87-a2cf-4e77-beb7-6badd9b8713a sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.259274+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.2593+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.259317+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.256879+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.256891+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.256932+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-3, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.256939+09:00","@version":"1","message":"[Consumer clientId=consumer-payment-service-group-4, groupId=payment-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.260284+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.26046+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.26194+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.262208+09:00","@version":"1","message":"[Consumer clientId=consumer-shipping-service-group-2, groupId=shipping-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.263212+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.263573+09:00","@version":"1","message":"Unregistering application ORDER-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.263731+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1747801455263, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.264223+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.264367+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.265868+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Revoke previously assigned partitions payment.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.265902+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Revoke previously assigned partitions shipping.failed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.265927+09:00","@version":"1","message":"order-service-group: partitions revoked: [payment.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.265958+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Member consumer-order-service-group-8-079692ca-18d6-468a-9301-6f8051b9b173 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.265958+09:00","@version":"1","message":"order-service-group: partitions revoked: [shipping.failed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.26599+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Revoke previously assigned partitions shipping.completed-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266061+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266072+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266079+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266128+09:00","@version":"1","message":"order-service-group: partitions revoked: [shipping.completed-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266167+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Member consumer-order-service-group-9-33be8042-5876-4018-b388-ab2116f7c467 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266256+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266266+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266273+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.26675+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Member consumer-order-service-group-7-6da6d043-3e65-441f-8f26-9a60c75fa2a7 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266841+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266851+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.266859+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.267447+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.267451+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.267471+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-8, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.267731+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.267751+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-7, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.267804+09:00","@version":"1","message":"[Consumer clientId=consumer-order-service-group-9, groupId=order-service-group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.268026+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.268751+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.268737+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:15.269178+09:00","@version":"1","message":"HikariPool-3 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.270065+09:00","@version":"1","message":"HikariPool-3 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.274334+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.40772+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.407784+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.407846+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.407877+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.407996+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.408061+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.408098+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.409705+09:00","@version":"1","message":"App info kafka.consumer for consumer-payment-service-group-4 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.410049+09:00","@version":"1","message":"payment-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.408793+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-8 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.408937+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.422223+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.422328+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.422113+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.422157+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.422206+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.422402+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.422449+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.423141+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-7 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.423296+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.424251+09:00","@version":"1","message":"App info kafka.consumer for consumer-payment-service-group-3 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.424544+09:00","@version":"1","message":"payment-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.42468+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.426692+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.429325+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.430496+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:15.430785+09:00","@version":"1","message":"HikariPool-2 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.431123+09:00","@version":"1","message":"HikariPool-2 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.436092+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.537733+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.537777+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.53781+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.537848+09:00","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.538067+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.538174+09:00","@version":"1","message":"Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.538226+09:00","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.53855+09:00","@version":"1","message":"App info kafka.consumer for consumer-order-service-group-9 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.538664+09:00","@version":"1","message":"order-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.540594+09:00","@version":"1","message":"App info kafka.consumer for consumer-shipping-service-group-2 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.540814+09:00","@version":"1","message":"shipping-service-group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.541097+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.542553+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.545093+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.545941+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:15.546237+09:00","@version":"1","message":"HikariPool-2 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.546529+09:00","@version":"1","message":"HikariPool-2 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:15.55102+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:16.550593+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:16.551653+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:16.552058+09:00","@version":"1","message":"HikariPool-3 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:16.552528+09:00","@version":"1","message":"HikariPool-3 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:16.553353+09:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.282896+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.287143+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\n\t... 39 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.287474+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:18.290868+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\n\t... 40 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.291175+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:18.291245+09:00","@version":"1","message":"DiscoveryClient_USER-SERVICE/user-service:86f214bce066d9955e203a3faf0069e9 - de-registration failedCannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n"}
{"@timestamp":"2025-05-21T13:24:18.294595+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.440367+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.448728+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 39 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.44968+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:18.458447+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 40 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.458993+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:18.459152+09:00","@version":"1","message":"DiscoveryClient_PAYMENT-SERVICE/payment-service:c18e8eb9b07901e566766a800c300214 - de-registration failedCannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n"}
{"@timestamp":"2025-05-21T13:24:18.461988+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.556245+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.562505+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 39 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.563466+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:18.569161+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 40 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:18.569709+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:18.569815+09:00","@version":"1","message":"DiscoveryClient_SHIPPING-SERVICE/shipping-service:e447aa3c2ea3b24c56b82d431e8c3994 - de-registration failedCannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n"}
{"@timestamp":"2025-05-21T13:24:18.571941+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:19.560741+09:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:19.574478+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\n\t... 39 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:19.575932+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:19.582071+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\n\t... 40 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T13:24:19.582551+09:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T13:24:19.582672+09:00","@version":"1","message":"DiscoveryClient_ORDER-SERVICE/order-service:6a62b57ca12108bef42207f2f48913fb - de-registration failedCannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n"}
{"@timestamp":"2025-05-21T13:24:19.586651+09:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
